// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ASM.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using ASM.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Poly\C6\ASM\ASM\ASM.Client\_Imports.razor"
using ASM.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Poly\C6\ASM\ASM\ASM.Client\Pages\Cart - Copy.razor"
using System.Net;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Poly\C6\ASM\ASM\ASM.Client\Pages\Cart - Copy.razor"
using ASM.Share.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(WebLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/cart")]
    public partial class Cart___Copy : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 86 "D:\Poly\C6\ASM\ASM\ASM.Client\Pages\Cart - Copy.razor"
       
    private string emailAddress;
    public ASM.Share.Models.Cart giohang;
    private double total = 0;
    protected string imgUrl = "";
    protected string temp = "";

    protected override async Task OnInitializedAsync()
    {
        emailAddress = sessionStorage.GetItem<string>("Email");//get key cart
        var cart = sessionStorage.GetItem<string>("cart");//get key cart

        if (cart == null)
        {
            giohang = new ASM.Share.Models.Cart();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<ASM.Share.Models.Cart>(cart);
        }

        imgUrl = config.GetSection("API")["ImgUrl"].ToString();

        /*
        //sessionStorage.SetItem("name", "John Smith");
        //var name = sessionStorage.GetItem<string>("name");

        //monAns = _monAnService.GetMonAnAll();

        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();

        monAns = new List<MonAn>();
        using (var client = new HttpClient())
        {
            //client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.BaseAddress = new Uri(apiUrl);
            using (var response = await client.GetAsync("MonAn"))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                monAns = Newtonsoft.Json.JsonConvert.DeserializeObject<List<MonAn>>(apiResponse);
            }
        }
        */
    }

    private void UpdateCart(CartItem item)
    {
        item.Sotien = item.Quantity * item.MonAn.Gia;
        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private void DeleteCart(CartItem item)
    {
        //item = null;
        //item.Sotien = 0;

        giohang.ListViewCart.Remove(item);
        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private async Task OrderCart()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<int>("KhachhangId");

        giohang.KhanghangId = khachhangId;

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    sessionStorage.RemoveItem("cart");
                    await JSRuntime.InvokeAsync<object>("clearCart", "");
                    NavigationManager.NavigateTo("/chitiet");
                }
                //donhang = Newtonsoft.Json.JsonConvert.DeserializeObject<Donhang>(apiResponse);
                //var accessToken = viewToken.Token;
                ////sessionStorage.SetItem("KhachhangID", );
                //sessionStorage.SetItem("KhachhangId", viewToken.KhachhangId);
                //sessionStorage.SetItem("Email", email);
                //sessionStorage.SetItem("AccessToken", accessToken);
                // NavigationManager.NavigateTo("/");
            }
        }


    }

    private double Tinhtien(List<CartItem> listCart)
    {
        double tongtien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }
        }
        return tongtien;
    }

    //private void AddCart(int id)
    //{

    //    List<ViewCart> dataCart = JsonConvert.DeserializeObject<List<ViewCart>>(cart);

    //    //var cart = HttpContext.Session.GetString("cart");//get key cart
    //    var cart = sessionStorage.GetItem<string>("cart");//get key cart
    //    if (cart == null)
    //    {
    //        var monAn = monAns.Where(u => u.MonAnID == id).FirstOrDefault();
    //        List<ViewCart> listCart = new List<ViewCart>()
    //        {
    //                new ViewCart
    //                {
    //                    MonAn = monAn,
    //                    Quantity = 1
    //                }
    //            };
    //        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(listCart));
    //        //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(listCart));
    //    }
    //    else
    //    {
    //        List<ViewCart> dataCart = JsonConvert.DeserializeObject<List<ViewCart>>(cart);
    //        bool check = true;
    //        for (int i = 0; i < dataCart.Count; i++)
    //        {
    //            if (dataCart[i].MonAn.MonAnID == id)
    //            {
    //                dataCart[i].Quantity++;
    //                check = false;
    //            }
    //        }
    //        if (check)
    //        {
    //            var monAn = monAns.Where(u => u.MonAnID == id).FirstOrDefault();
    //            dataCart.Add(new ViewCart
    //            {
    //                MonAn = monAn,
    //                Quantity = 1
    //            });
    //        }
    //        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(dataCart));
    //        //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(dataCart));
    //    }
    //}

    //protected override async Task OnInitializedAsync()
    //{
    //    await sessionStorage.sSetItemAsync("name", "John Smith");
    //    await sessionStorage.SetItemAsync("name", "John Smith");
    //    string name = await sessionStorage.GetItemAsync<string>("name");
    //    int i = 0;
    //}

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.Extensions.Configuration.IConfiguration config { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISyncSessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
